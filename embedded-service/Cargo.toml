[package]
name = "embedded-services"
version = "0.1.0"
edition = "2021"
license = "MIT"
description = "Embedded Service Layer for IPC, Feature Customization and Extension in Embedded Devices."
repository = "https://github.com/OpenDevicePartnership/embedded-services"
rust-version = "1.85"

[dependencies]
bitfield.workspace = true
bitflags.workspace = true
bitvec.workspace = true
cfg-if.workspace = true
chrono = { workspace = true, optional = true }
critical-section.workspace = true
defmt = { workspace = true, optional = true }
document-features.workspace = true
embassy-executor.workspace = true
embassy-futures.workspace = true
embassy-sync.workspace = true
embassy-time.workspace = true
embedded-cfu-protocol.workspace = true
embedded-hal-async.workspace = true
embedded-hal-nb.workspace = true
embedded-io-async.workspace = true
embedded-io.workspace = true
embedded-storage-async.workspace = true
embedded-storage.workspace = true
embedded-usb-pd.workspace = true
embedded-batteries-async.workspace = true
fixed.workspace = true
heapless.workspace = true
log = { workspace = true, optional = true }
postcard.workspace = true
rand_core.workspace = true
serde.workspace = true

[target.'cfg(target_os = "none")'.dependencies]
cortex-m-rt.workspace = true
cortex-m.workspace = true

[dev-dependencies]
embassy-sync = { workspace = true, features = ["std"] }
embassy-futures.workspace = true

[features]
default = []
defmt = [
    "dep:defmt",
    "embassy-sync/defmt",
    "embassy-time/defmt",
    "embassy-executor/defmt",
    "embassy-futures/defmt",
    "embedded-usb-pd/defmt",
    "embedded-cfu-protocol/defmt",
]
log = [
    "dep:log",
    "embassy-sync/log",
    "embassy-time/log",
    "embassy-executor/log",
    "embassy-futures/log",
    "embedded-cfu-protocol/log",
]
